openapi: 3.0.0
info:
  title: Profiler API
  version: 1.0.0
  description: This documentation contains a API of a profiler software for software developers
paths:
  /v1/pdf/generate:
    post:
      tags: [PDF]
      summary: Generate profile PDF
      operationId: generateProfilePdf
      description: Generates a PDF file based on a request object that contains the ProfileDto, KnowledgeCategoryListDto and a List of ProjectDtos.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfilePdfRequestDto'
      responses:
        '200':
          description: OK
          content:
            application/pdf: { }
        '400':
          description: Bad Request - Invalid Input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error - Generating PDF file failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/knowledge:
    put:
      tags: [Knowledge]
      summary: Update Knowledge Category List
      operationId: updateKnowledgeCategoryList
      description: Updates the list of knowledge categories.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeCategoryListDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: "Knowledge list updated successfully!"
        '400':
          description: Bad Request - Invalid Input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error - Saving knowledge category list failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags: [Knowledge]
      summary: Read Knowledge Category List
      operationId: getKnowledgeCategoryList
      description: Retrieves the list of knowledge categories.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeCategoryListDto'
        '500':
          description: Internal Server Error - Retrieving knowledge category list failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/project:
    post:
      tags: [Projects]
      summary: Create Project
      operationId: createProject
      description: Creates a new project.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: string
                example: "Project created successfully!"
        '400':
          description: Bad Request - Invalid Input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error - Creating project failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/project/{id}:
    get:
      tags: [Projects]
      summary: Get Project by ID
      operationId: getProjectById
      description: Retrieves project information by ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDto'
        '400':
          description: Bad Request - Invalid ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found - Project does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error - Retrieving project failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags: [Projects]
      summary: Delete Project by ID
      operationId: deleteProjectById
      description: Deletes a project by ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                type: string
                example: "Item deleted successfully"
        '400':
          description: Bad Request - Invalid ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found - Project does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error - Deleting project failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/project/all:
    get:
      tags: [Projects]
      summary: Get Project List
      operationId: getAllProject
      description: Retrieves the list of all projects.
      parameters:
        - name: page
          in: query
          description: Page number for the paginated results
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: pageSize
          in: query
          description: Number of results per page
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 100
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectListDto'
        '400':
          description: Bad Request - Invalid Parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error - Retrieving all projects failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    ProfilePdfRequestDto:
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/ProfileDto'
        knowledgeCategoryList:
          $ref: '#/components/schemas/KnowledgeCategoryListDto'
        projectList:
          type: array
          items:
            $ref: '#/components/schemas/ProjectDto'
    ProfileDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
          description: "Unique identifier of the user profile"
        name:
          type: string
          example: "Max Mustermann"
          description: "Full name of the user"
        bornOn:
          type: string
          format: date
          example: "1999-06-13"
          description: "Birth date of the user"
        location:
          type: string
          example: "Germany"
          description: "Location of the user"
        description:
          type: string
          example: "Hi my name is Max"
          description: "Personal description of the user"
        avatar:
          type: string
          format: byte
          description: "Avatar image in base64 encoding"
    KnowledgeDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
          description: "Unique identifier of the knowledge"
        name:
          type: string
          example: "Spring Boot"
          description: "Name of the knowledge"
    KnowledgeCategoryListDto:
      type: array
      items:
        properties:
          category:
            type: string
            description: "Name of the knowledge category"
          knowledgeList:
            type: array
            items:
              $ref: '#/components/schemas/KnowledgeDto'
            description: "List of knowledges in this category"
    ProjectDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          description: "Name of the project"
        description:
          type: string
          description: "Description of the project"
        from:
          type: string
          format: date
          description: "Start date of the project"
        to:
          type: string
          format: date
          description: "End date of the project"
        knowledgeList:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeDto'
    ProjectListDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          description: "Name of the project"

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Detailed error message
        timeStamp:
          type: string
          format: date-time
          description: When error occurred
        path:
          type: string
          description: Path where error occurred
        statusCode:
          type: integer
          description: HTTP status code